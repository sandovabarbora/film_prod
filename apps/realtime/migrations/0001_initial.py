# Generated by Django 5.2.4 on 2025-07-07 16:20

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('production', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ChatRoom',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('room_type', models.CharField(choices=[('general', 'General'), ('department', 'Department'), ('emergency', 'Emergency'), ('private', 'Private')], default='general', max_length=20)),
                ('is_public', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_rooms', to=settings.AUTH_USER_MODEL)),
                ('members', models.ManyToManyField(blank=True, related_name='chat_rooms', to=settings.AUTH_USER_MODEL)),
                ('moderators', models.ManyToManyField(blank=True, related_name='moderated_rooms', to=settings.AUTH_USER_MODEL)),
                ('production', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_rooms', to='production.production')),
            ],
            options={
                'ordering': ['-updated_at'],
                'unique_together': {('production', 'name')},
            },
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('message_type', models.CharField(choices=[('text', 'Text'), ('image', 'Image'), ('file', 'File'), ('system', 'System'), ('alert', 'Alert')], default='text', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_edited', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('attachments', models.JSONField(default=list)),
                ('read_by', models.ManyToManyField(blank=True, related_name='read_messages', to=settings.AUTH_USER_MODEL)),
                ('reply_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='realtime.chatmessage')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_messages', to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='realtime.chatroom')),
            ],
            options={
                'ordering': ['created_at'],
                'indexes': [models.Index(fields=['room', 'created_at'], name='realtime_ch_room_id_ed0063_idx'), models.Index(fields=['user', 'created_at'], name='realtime_ch_user_id_7a7791_idx')],
            },
        ),
        migrations.CreateModel(
            name='RealtimeEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('status_update', 'Status Update'), ('scene_started', 'Scene Started'), ('scene_completed', 'Scene Completed'), ('shot_started', 'Shot Started'), ('shot_completed', 'Shot Completed'), ('take_recorded', 'Take Recorded'), ('crew_checkin', 'Crew Check-in'), ('crew_checkout', 'Crew Check-out'), ('equipment_alert', 'Equipment Alert'), ('schedule_change', 'Schedule Change'), ('emergency', 'Emergency Alert')], max_length=50)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('event_data', models.JSONField(default=dict)),
                ('target_roles', models.CharField(blank=True, max_length=200)),
                ('is_broadcast', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('delivery_count', models.PositiveIntegerField(default=0)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=10)),
                ('delivered_to', models.ManyToManyField(blank=True, related_name='received_events', to=settings.AUTH_USER_MODEL)),
                ('production', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='realtime_events', to='production.production')),
                ('target_users', models.ManyToManyField(blank=True, related_name='targeted_events', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='triggered_events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['production', 'created_at'], name='realtime_re_product_e32f8b_idx'), models.Index(fields=['event_type', 'priority'], name='realtime_re_event_t_740408_idx'), models.Index(fields=['is_broadcast', 'processed_at'], name='realtime_re_is_broa_9811f4_idx')],
            },
        ),
        migrations.CreateModel(
            name='RealtimeMetrics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('active_connections', models.PositiveIntegerField(default=0)),
                ('peak_connections', models.PositiveIntegerField(default=0)),
                ('total_events_sent', models.PositiveIntegerField(default=0)),
                ('total_messages_sent', models.PositiveIntegerField(default=0)),
                ('avg_latency_ms', models.FloatField(default=0.0)),
                ('error_count', models.PositiveIntegerField(default=0)),
                ('recorded_at', models.DateTimeField(auto_now_add=True)),
                ('production', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='realtime_metrics', to='production.production')),
            ],
            options={
                'ordering': ['-recorded_at'],
                'indexes': [models.Index(fields=['production', 'recorded_at'], name='realtime_re_product_ca97f4_idx')],
            },
        ),
        migrations.CreateModel(
            name='WebSocketConnection',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('channel_name', models.CharField(max_length=100, unique=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('connected_at', models.DateTimeField(auto_now_add=True)),
                ('last_ping', models.DateTimeField(auto_now=True)),
                ('disconnected_at', models.DateTimeField(blank=True, null=True)),
                ('can_broadcast', models.BooleanField(default=False)),
                ('can_moderate', models.BooleanField(default=False)),
                ('production', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='active_connections', to='production.production')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='websocket_connections', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-connected_at'],
                'indexes': [models.Index(fields=['production', 'connected_at'], name='realtime_we_product_965801_idx'), models.Index(fields=['user', 'production'], name='realtime_we_user_id_76a35a_idx'), models.Index(fields=['channel_name'], name='realtime_we_channel_0067fa_idx')],
            },
        ),
    ]
