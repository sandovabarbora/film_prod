# Generated by Django 5.2.4 on 2025-07-09 10:12

import datetime
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('production', '0001_initial'),
        ('realtime', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LiveDashboardData',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('current_scene', models.CharField(blank=True, max_length=10)),
                ('current_shot', models.CharField(blank=True, max_length=10)),
                ('current_take', models.IntegerField(default=1)),
                ('current_status', models.CharField(choices=[('prep', 'Preparing'), ('rehearsal', 'Rehearsing'), ('lighting', 'Lighting'), ('rolling', 'Rolling'), ('reset', 'Resetting'), ('moving_on', 'Moving On'), ('meal_break', 'Meal Break'), ('weather_hold', 'Weather Hold'), ('technical_hold', 'Technical Hold'), ('wrapped', 'Wrapped')], default='prep', max_length=15)),
                ('scenes_completed_today', models.IntegerField(default=0)),
                ('pages_shot_today', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('takes_completed_today', models.IntegerField(default=0)),
                ('setups_completed_today', models.IntegerField(default=0)),
                ('day_start_time', models.TimeField(blank=True, null=True)),
                ('current_scene_start_time', models.TimeField(blank=True, null=True)),
                ('last_shot_time', models.TimeField(blank=True, null=True)),
                ('estimated_wrap_time', models.TimeField(blank=True, null=True)),
                ('weather_delay_minutes', models.IntegerField(default=0)),
                ('technical_delay_minutes', models.IntegerField(default=0)),
                ('other_delay_minutes', models.IntegerField(default=0)),
                ('active_issues', models.JSONField(blank=True, default=list)),
                ('crew_checked_in', models.IntegerField(default=0)),
                ('crew_total', models.IntegerField(default=0)),
                ('crew_on_break', models.IntegerField(default=0)),
                ('last_update', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-last_update'],
            },
        ),
        migrations.CreateModel(
            name='RealtimeNotification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('notification_type', models.CharField(choices=[('info', 'Information'), ('warning', 'Warning'), ('alert', 'Alert'), ('emergency', 'Emergency'), ('success', 'Success')], default='info', max_length=20)),
                ('target_users', models.JSONField(blank=True, default=list)),
                ('target_departments', models.JSONField(blank=True, default=list)),
                ('send_to_all', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_to', models.JSONField(blank=True, default=list)),
                ('read_by', models.JSONField(blank=True, default=list)),
                ('auto_dismiss_seconds', models.IntegerField(default=10)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.RemoveField(
            model_name='realtimemetrics',
            name='production',
        ),
        migrations.AlterModelOptions(
            name='chatmessage',
            options={'ordering': ['-created_at']},
        ),
        migrations.AlterModelOptions(
            name='chatroom',
            options={'ordering': ['name']},
        ),
        migrations.RemoveIndex(
            model_name='realtimeevent',
            name='realtime_re_product_e32f8b_idx',
        ),
        migrations.RemoveIndex(
            model_name='realtimeevent',
            name='realtime_re_event_t_740408_idx',
        ),
        migrations.RemoveIndex(
            model_name='realtimeevent',
            name='realtime_re_is_broa_9811f4_idx',
        ),
        migrations.RemoveIndex(
            model_name='websocketconnection',
            name='realtime_we_channel_0067fa_idx',
        ),
        migrations.RenameField(
            model_name='chatmessage',
            old_name='content',
            new_name='message',
        ),
        migrations.RemoveField(
            model_name='chatmessage',
            name='attachments',
        ),
        migrations.RemoveField(
            model_name='chatmessage',
            name='is_edited',
        ),
        migrations.RemoveField(
            model_name='chatmessage',
            name='updated_at',
        ),
        migrations.RemoveField(
            model_name='chatroom',
            name='is_active',
        ),
        migrations.RemoveField(
            model_name='chatroom',
            name='members',
        ),
        migrations.RemoveField(
            model_name='chatroom',
            name='updated_at',
        ),
        migrations.RemoveField(
            model_name='realtimeevent',
            name='description',
        ),
        migrations.RemoveField(
            model_name='realtimeevent',
            name='event_data',
        ),
        migrations.RemoveField(
            model_name='realtimeevent',
            name='is_broadcast',
        ),
        migrations.RemoveField(
            model_name='realtimeevent',
            name='processed_at',
        ),
        migrations.RemoveField(
            model_name='realtimeevent',
            name='target_roles',
        ),
        migrations.AddField(
            model_name='chatmessage',
            name='attachment',
            field=models.FileField(blank=True, null=True, upload_to='chat_attachments/'),
        ),
        migrations.AddField(
            model_name='chatmessage',
            name='deleted_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='chatmessage',
            name='edited_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='chatmessage',
            name='reactions',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name='chatroom',
            name='allowed_departments',
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AddField(
            model_name='chatroom',
            name='allowed_users',
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AddField(
            model_name='chatroom',
            name='is_archived',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='chatroom',
            name='max_messages',
            field=models.IntegerField(default=1000),
        ),
        migrations.AddField(
            model_name='realtimeevent',
            name='acknowledged_by',
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AddField(
            model_name='realtimeevent',
            name='data',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name='realtimeevent',
            name='expires_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='realtimeevent',
            name='message',
            field=models.TextField(default=datetime.datetime(2025, 7, 9, 10, 12, 18, 846697, tzinfo=datetime.timezone.utc)),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='realtimeevent',
            name='target_all',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='realtimeevent',
            name='target_departments',
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AlterField(
            model_name='chatmessage',
            name='message_type',
            field=models.CharField(choices=[('text', 'Text Message'), ('image', 'Image'), ('file', 'File'), ('location', 'Location Share'), ('status', 'Status Update'), ('system', 'System Message')], default='text', max_length=20),
        ),
        migrations.RemoveField(
            model_name='chatmessage',
            name='read_by',
        ),
        migrations.AlterField(
            model_name='chatmessage',
            name='reply_to',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='realtime.chatmessage'),
        ),
        migrations.AlterField(
            model_name='chatroom',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.RemoveField(
            model_name='chatroom',
            name='moderators',
        ),
        migrations.AlterField(
            model_name='chatroom',
            name='room_type',
            field=models.CharField(choices=[('general', 'General Chat'), ('department', 'Department Channel'), ('location', 'Location Channel'), ('emergency', 'Emergency Channel'), ('directors', 'Directors Only'), ('producers', 'Producers Only'), ('private', 'Private Chat')], default='general', max_length=15),
        ),
        migrations.RemoveField(
            model_name='realtimeevent',
            name='delivered_to',
        ),
        migrations.AlterField(
            model_name='realtimeevent',
            name='delivery_count',
            field=models.IntegerField(default=0),
        ),
        migrations.AlterField(
            model_name='realtimeevent',
            name='event_type',
            field=models.CharField(choices=[('status_update', 'Status Update'), ('scene_started', 'Scene Started'), ('scene_completed', 'Scene Completed'), ('shot_started', 'Shot Started'), ('shot_completed', 'Shot Completed'), ('take_recorded', 'Take Recorded'), ('break_started', 'Break Started'), ('break_ended', 'Break Ended'), ('crew_checkin', 'Crew Check-in'), ('equipment_issue', 'Equipment Issue'), ('weather_update', 'Weather Update'), ('emergency', 'Emergency'), ('wrap_called', 'Wrap Called'), ('custom', 'Custom Event')], max_length=20),
        ),
        migrations.RemoveField(
            model_name='realtimeevent',
            name='target_users',
        ),
        migrations.AddIndex(
            model_name='chatroom',
            index=models.Index(fields=['production', 'room_type'], name='realtime_ch_product_0c3e85_idx'),
        ),
        migrations.AddIndex(
            model_name='realtimeevent',
            index=models.Index(fields=['production', 'event_type', 'created_at'], name='realtime_re_product_48ef73_idx'),
        ),
        migrations.AddIndex(
            model_name='realtimeevent',
            index=models.Index(fields=['priority', 'created_at'], name='realtime_re_priorit_bfee28_idx'),
        ),
        migrations.AddField(
            model_name='livedashboarddata',
            name='production',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='live_dashboard_data', to='production.production'),
        ),
        migrations.AddField(
            model_name='livedashboarddata',
            name='updated_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='realtimenotification',
            name='production',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='realtime_notifications', to='production.production'),
        ),
        migrations.DeleteModel(
            name='RealtimeMetrics',
        ),
        migrations.AddField(
            model_name='chatmessage',
            name='read_by',
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AddField(
            model_name='chatroom',
            name='moderators',
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AddField(
            model_name='realtimeevent',
            name='delivered_to',
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AddField(
            model_name='realtimeevent',
            name='target_users',
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AddIndex(
            model_name='livedashboarddata',
            index=models.Index(fields=['production', 'last_update'], name='realtime_li_product_c53c3f_idx'),
        ),
        migrations.AddIndex(
            model_name='realtimenotification',
            index=models.Index(fields=['production', 'created_at'], name='realtime_re_product_c562f0_idx'),
        ),
        migrations.AddIndex(
            model_name='realtimenotification',
            index=models.Index(fields=['notification_type', 'created_at'], name='realtime_re_notific_a013b1_idx'),
        ),
    ]
