# Generated by Django 5.2.3 on 2025-07-03 09:40

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('production', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AlertConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('velocity_decline_threshold', models.DecimalField(decimal_places=1, default=20, max_digits=4)),
                ('velocity_target_pages_per_day', models.DecimalField(decimal_places=2, default=5, max_digits=4)),
                ('efficiency_low_threshold', models.DecimalField(decimal_places=1, default=70, max_digits=4)),
                ('shoot_ratio_low_threshold', models.DecimalField(decimal_places=2, default=0.6, max_digits=3)),
                ('schedule_variance_warning_days', models.IntegerField(default=3)),
                ('schedule_variance_critical_days', models.IntegerField(default=7)),
                ('budget_variance_warning_percent', models.DecimalField(decimal_places=1, default=10, max_digits=4)),
                ('budget_variance_critical_percent', models.DecimalField(decimal_places=1, default=20, max_digits=4)),
                ('email_notifications', models.BooleanField(default=True)),
                ('slack_notifications', models.BooleanField(default=False)),
                ('dashboard_notifications', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('production', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alert_configs', to='production.production')),
            ],
            options={
                'verbose_name': 'Alert Configuration',
                'verbose_name_plural': 'Alert Configurations',
            },
        ),
        migrations.CreateModel(
            name='PerformanceBaseline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_type', models.CharField(choices=[('pages_per_day', 'Pages per Day'), ('shoot_ratio', 'Shoot Ratio'), ('setup_time', 'Setup Time Minutes'), ('cost_per_page', 'Cost per Page'), ('efficiency_score', 'Efficiency Score'), ('crew_hours_per_page', 'Crew Hours per Page')], max_length=50)),
                ('production_type', models.CharField(choices=[('feature', 'Feature Film'), ('commercial', 'Commercial'), ('series', 'TV Series'), ('documentary', 'Documentary'), ('music_video', 'Music Video')], default='feature', max_length=50)),
                ('budget_range', models.CharField(blank=True, choices=[('low', 'Low Budget'), ('medium', 'Medium Budget'), ('high', 'High Budget'), ('ultra_high', 'Ultra High Budget')], max_length=20)),
                ('industry_average', models.DecimalField(decimal_places=2, max_digits=10)),
                ('industry_median', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('industry_best_25th', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('industry_worst_25th', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('sample_size', models.IntegerField(default=0)),
                ('data_source', models.CharField(blank=True, max_length=100)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'indexes': [models.Index(fields=['metric_type', 'production_type'], name='analytics_p_metric__e3ccc5_idx')],
                'unique_together': {('metric_type', 'production_type', 'budget_range')},
            },
        ),
        migrations.CreateModel(
            name='ProductionMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('pages_shot', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('scenes_completed', models.IntegerField(default=0)),
                ('shots_completed', models.IntegerField(default=0)),
                ('takes_total', models.IntegerField(default=0)),
                ('takes_good', models.IntegerField(default=0)),
                ('first_shot_time', models.TimeField(blank=True, null=True)),
                ('wrap_time', models.TimeField(blank=True, null=True)),
                ('total_shooting_hours', models.DecimalField(decimal_places=2, max_digits=4, null=True)),
                ('setup_time_minutes', models.IntegerField(default=0)),
                ('crew_hours_total', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('overtime_hours', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('shoot_ratio', models.DecimalField(decimal_places=3, max_digits=4, null=True)),
                ('pages_per_hour', models.DecimalField(decimal_places=2, max_digits=4, null=True)),
                ('setups_per_hour', models.DecimalField(decimal_places=2, max_digits=4, null=True)),
                ('efficiency_score', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('estimated_daily_cost', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('cost_per_page', models.DecimalField(decimal_places=2, max_digits=8, null=True)),
                ('budget_variance_percent', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('estimated_completion_date', models.DateField(null=True)),
                ('schedule_variance_days', models.IntegerField(default=0)),
                ('velocity_trend', models.CharField(max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('calculated_by', models.CharField(default='system', max_length=100)),
                ('production', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics_metrics', to='production.production')),
            ],
            options={
                'ordering': ['-date'],
                'indexes': [models.Index(fields=['production', 'date'], name='analytics_p_product_56b83d_idx'), models.Index(fields=['date'], name='analytics_p_date_b57600_idx'), models.Index(fields=['efficiency_score'], name='analytics_p_efficie_3ef545_idx')],
                'unique_together': {('production', 'date')},
            },
        ),
        migrations.CreateModel(
            name='VelocityTrend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('velocity_7day', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('velocity_14day', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('velocity_30day', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('trend_direction', models.CharField(choices=[('improving', 'Improving'), ('declining', 'Declining'), ('stable', 'Stable'), ('volatile', 'Volatile')], max_length=20, null=True)),
                ('trend_strength', models.DecimalField(decimal_places=2, max_digits=3, null=True)),
                ('prediction_confidence', models.DecimalField(decimal_places=2, max_digits=4, null=True)),
                ('predicted_pages_next_7_days', models.DecimalField(decimal_places=2, max_digits=6, null=True)),
                ('predicted_completion_date', models.DateField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('production', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='velocity_trends', to='production.production')),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('production', 'date')},
            },
        ),
    ]
